{"version":3,"sources":["components/images/Rectangle-45.png","components/images/Rectangle-46.png","components/images/Rectangle-47.png","components/images/Rectangle-48.png","components/images/Rectangle-49.png","components/images/Rectangle-50.png","components/promo/promo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Promo","data","show","className","style","backgroundColor","color","display","title","subtitle","list","map","item","index","key","dotColor","backgroundImage","image","buttonTitle","Rectangle47","Rectangle45","Rectangle50","Rectangle49","Rectangle48","Rectangle46","App","useState","current","setCurrent","onChange","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,+LC2B5BC,MAxBf,YAA8B,IAAdC,EAAa,EAAbA,KAAMC,EAAO,EAAPA,KAEpB,OACE,yBAAKC,UAAU,QAAQC,MAAO,CAACC,gBAAiBJ,EAAKK,MAAOC,QAAkB,SAATL,EAAkB,QAAU,SAC/F,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,gBAAgBF,EAAKO,OACpC,yBAAKL,UAAU,mBAAmBF,EAAKQ,UACvC,wBAAIN,UAAU,eACXF,EAAKS,KAAKC,KAAI,SAACC,EAAMC,GAAP,OACb,wBAAIC,IAAKD,EAAOV,UAAWF,EAAKc,UAAWH,OAG/C,yBAAKT,UAAU,iBAAf,6EAEF,yBAAKA,UAAU,eAAeC,MAAO,CAACY,gBAAgB,OAAD,OAASf,EAAKgB,MAAd,W,gGCRvDhB,EAAO,CACX,CACEK,MAAO,UACPS,SAAU,SACVP,MAAO,uMACPU,YAAa,uMACbT,SAAU,iMACVC,KAAM,CAAC,8GAA0B,wZACE,kOACnCO,MAAOE,KAET,CACEb,MAAO,UACPS,SAAU,OACVP,MAAO,8PACPU,YAAa,yLACbT,SAAU,kXAEVC,KAAM,CAAC,6DAAiB,gHAAuB,8UAE/CO,MAAOG,KAET,CACEd,MAAO,UACPS,SAAU,OACVP,MAAO,sKAEPU,YAAa,sKAEbT,SAAU,6UACVC,KAAM,CAAC,kcACmB,0fAC1BO,MAAOI,KAET,CACEf,MAAO,UACPS,SAAU,SACVP,MAAO,wIACPU,YAAa,wIACbT,SAAU,gWAEVC,KAAM,CAAC,qZACoB,oVAE3BO,MAAOK,KAET,CACEhB,MAAO,UACPS,SAAU,eACVP,MAAO,0JACPU,YAAa,0JACbT,SAAU,+jBACVC,KAAM,CAAC,+UACM,yIAA4B,wHACzCO,MAAOM,KAET,CACEjB,MAAO,UACPS,SAAU,QACVP,MAAO,iMACPU,YAAa,iMACbT,SAAU,GACVC,KAAM,CAAC,kPAAgD,2lBAGvDO,MAAOO,MA8BIC,MAxBf,WAAe,MACiBC,mBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,KAOb,OACE,yBAAK,UAAU,OACZ3B,EAAKU,KAAI,SAACC,EAAMC,GAAP,OACR,kBAAC,EAAD,CAAO,IAAKA,EAAO,KAAMD,EAAM,KAAMe,IAAYd,EAAQ,OAAS,aAEpE,yBAAK,UAAU,WACZZ,EAAKU,KAAI,SAACC,EAAMC,GAAP,OACR,yBAAK,UAAU,SAAS,IAAKA,EAAO,QAAS,kBAXpC,SAACA,GAChBe,EAAWf,GAU8CgB,CAAShB,IAAQ,MAAO,CAACR,gBAAiBsB,IAAYd,EAAQD,EAAKN,MAAQ,KAC3HM,EAAKM,mBCpFEY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ec926a1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rectangle-45.bb2169a5.png\";","module.exports = __webpack_public_path__ + \"static/media/Rectangle-46.93b09f5c.png\";","module.exports = __webpack_public_path__ + \"static/media/Rectangle-47.3d6bba5e.png\";","module.exports = __webpack_public_path__ + \"static/media/Rectangle-48.568c6179.png\";","module.exports = __webpack_public_path__ + \"static/media/Rectangle-49.90c85d26.png\";","module.exports = __webpack_public_path__ + \"static/media/Rectangle-50.03580f50.png\";","import React from 'react';\nimport './index.css';\n\nfunction Promo({data, show}) {\n\n  return (\n    <div className=\"promo\" style={{backgroundColor: data.color, display: show === 'true' ? 'block' : 'none'}}>\n      <div className=\"promo__container\">\n        <div className=\"promo__text-block\">\n          <div className=\"promo__title\">{data.title}</div>\n          <div className=\"promo__subtitle\">{data.subtitle}</div>\n          <ul className=\"promo__list\">\n            {data.list.map((item, index) => (\n              <li key={index} className={data.dotColor}>{item}</li>\n            ))}\n          </ul>\n          <div className=\"promo__button\">Консультация</div>\n        </div>\n        <div className=\"promo__image\" style={{backgroundImage: `url(${data.image})`}}>\n        </div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default Promo;\n","import React, {useState} from 'react';\nimport './App.css';\nimport Promo from \"./components/promo/promo\";\nimport Rectangle45 from './components/images/Rectangle-45.png';\nimport Rectangle46 from './components/images/Rectangle-46.png';\nimport Rectangle47 from './components/images/Rectangle-47.png';\nimport Rectangle48 from './components/images/Rectangle-48.png';\nimport Rectangle49 from './components/images/Rectangle-49.png';\nimport Rectangle50 from './components/images/Rectangle-50.png';\n\nconst data = [\n  {\n    color: '#FFF8CC',\n    dotColor: 'yellow',\n    title: 'Валютные операции по выгодному курсу',\n    buttonTitle: 'Валютные операции по выгодному курсу',\n    subtitle: 'На московской бирже без посредников',\n    list: ['Комиссия от 1 копейки*', 'Для заключения сделки достаточно иметь на брокерском счету лишь часть суммы', 'Быстрый вывод валюты на ваш расчётный счёт'],\n    image: Rectangle47,\n  },\n  {\n    color: '#FFE9E9',\n    dotColor: 'pink',\n    title: 'Вложение свободных средств для юридических лиц',\n    buttonTitle: 'Однодневные инструменты МосБиржи',\n    subtitle: 'Зарабатывайте с помощью однодневных инструментов  московской биржи:',\n    list: ['Срок от 1 дня', 'Конкурентные ставки', 'Надёжный контрагент  НКО “Национальный Клиринговый Центр” АО'],\n    image: Rectangle45,\n  },\n  {\n    color: '#D9F4F2',\n    dotColor: 'blue',\n    title: 'Инвестиции  в еврооблигации и ETF',\n    buttonTitle: 'Инвестиции  в еврооблигации и ETF',\n    subtitle: 'Вкладывайте валюту в инструменты с фиксированной доходностью',\n    list: ['Еврооблигации — ценные бумаги, номинированные в валюте с фиксированной доходностью', 'ETF2 — группа инструменов для реализации инвестиционной стратегии, не требующей активного участия'],\n    image: Rectangle50,\n  },\n  {\n    color: '#E1EAF7',\n    dotColor: 'purple',\n    title: 'Брокерское обслуживание',\n    buttonTitle: 'Брокерское обслуживание',\n    subtitle: 'Получите доступ к российским и международным торговым площадкам:',\n    list: ['А мы поможем составить портфель из ценных бумаг, валюты, фьючерсов и опционов', 'Предоставим программное обеспечение, аналитику, обзоры рынков'],\n    image: Rectangle49,\n  },\n  {\n    color: '#F3EFF7',\n    dotColor: 'purple-light',\n    title: 'Привлечение финансирования',\n    buttonTitle: 'Привлечение финансирования',\n    subtitle: 'Брокер предоставляет вам возможность вывода денежных средств под обеспечение в виде валюты или ценных бумаг',\n    list: ['Для решения кассовых разрывов, развития бизнеса и других целей', 'Низкие процентные ставки', 'Гибкие сроки возврата'],\n    image: Rectangle48,\n  },\n  {\n    color: '#EEF8E4',\n    dotColor: 'green',\n    title: 'Снижение валютных и рыночных рисков',\n    buttonTitle: 'Снижение валютных и рыночных рисков',\n    subtitle: '',\n    list: ['Фиксируйте курс сегодня для будущих расчётов', 'Проконсультируем, дадим экспертную оценку, порекомендуем оптимальное решение для защиты от валютных колебаний'],\n    image: Rectangle46,\n  }\n\n\n];\n\nfunction App() {\n  const [current, setCurrent] = useState(0);\n\n  const onChange = (index) => {\n    setCurrent(index);\n  };\n\n  return (\n    <div className=\"App\">\n      {data.map((item, index) => (\n        <Promo key={index} data={item} show={current === index ? 'true' : 'false'}/>\n      ))}\n      <div className=\"buttons\">\n        {data.map((item, index) => (\n          <div className=\"button\" key={index} onClick={() => onChange(index)} style={{backgroundColor: current === index ? item.color : ''}}>\n            {item.buttonTitle}\n          </div>\n        ))}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}